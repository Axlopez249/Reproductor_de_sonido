package funcionamiento;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.sound.sampled.*;

public class UI extends JFrame{
	private JTextArea textArea;
	private JButton button1;
	private JButton button2;
	private JButton button3;
	private JButton button4;
	private JButton button5;
	private JButton button6;
	private JButton button7;
	
	public UI() {
		setTitle("Reproductor de sonidos");
        setSize(500, 600); // Set the desired size
        setResizable(false); // Disable frame resizing
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

        setLocation(50, 60);
        
   
        button1 = new JButton("Sonido 1");
        button2 = new JButton("Sonido 2");
        button3 = new JButton("Sonido 3");
        button4 = new JButton("Sonido 4");
        button5 = new JButton("Sonido 5");
        button6 = new JButton("Sonido 6");
        button7 = new JButton("Sonido 7");

        // Define positions for the buttons
        button1.setBounds(40, 50, 100, 30);
        button2.setBounds(40, 100, 100, 30);
        button3.setBounds(40, 150, 100, 30);
        button4.setBounds(40, 200, 100, 30);
        button5.setBounds(40, 250, 100, 30);
        button6.setBounds(40, 300, 100, 30);
        button7.setBounds(40, 350, 100, 30);

        // Add buttons to the frame's content pane
        getContentPane().add(button1);
        getContentPane().add(button2);
        getContentPane().add(button3);
        getContentPane().add(button4);
        getContentPane().add(button5);
        getContentPane().add(button6);
        getContentPane().add(button7);

        // Set null layout
        getContentPane().setLayout(null);

        // Add onClick event listeners to the buttons
        button1.addActionListener(e -> Rep_sonido_1());
        button2.addActionListener(e -> Rep_sonido_1());	
        button3.addActionListener(e -> Rep_sonido_1());
        button4.addActionListener(e -> Rep_sonido_1());	
        button5.addActionListener(e -> Rep_sonido_1());
        button6.addActionListener(e -> Rep_sonido_1());	
        button7.addActionListener(e -> Rep_sonido_1());

    }
	
	
	
	private void Rep_sonido_1() {
		try {
            // Cargar el archivo de sonido
			AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(UI.class.getResource("Sound1.wav"));



            // Obtener el clip de audio
            Clip clip = AudioSystem.getClip();

            // Abrir el clip con el flujo de audio
            clip.open(audioInputStream);

            // Reproducir el sonido
            clip.start();
            


        } catch (Exception ex) {
            ex.printStackTrace();
        }

	}
	
	private void Rep_sonido_2() {
		try {
            // Cargar el archivo de sonido
			AudioInputStream audioInputStream = AudioSystem.getAudioInputStream(UI.class.getResource("Sound2.wav"));



            // Obtener el clip de audio
            Clip clip = AudioSystem.getClip();

            // Abrir el clip con el flujo de audio
            clip.open(audioInputStream);

            // Reproducir el sonido
            clip.start();
            


        } catch (Exception ex) {
            ex.printStackTrace();
        }
	}
}
